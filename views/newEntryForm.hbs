

<style>
    form {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        margin: 20px;
    }

    label {
        width: 100%;
    }

    input[type="checkbox"] {
        margin-left: 0;
    }

    input, textarea {
        width: 100%;
    }

    button {
        margin-top: 10px;
    }
</style>

<form id="createEntryForm">
    <label for="title">Title:</label>
    <input type="text" id="title" name="noteTitle" required>

    <label for="importance">Importance (1-5):</label>
    <input type="number" id="importance" name="noteImportance" min="1" max="5" required>

    <label for="date">Due Date:</label>
    <input type="date" id="date" name="noteDueDate" required>

    <label for="state">Finished:</label>
    <input type="checkbox" id="state" name="noteState" value="COMPLETED">


    <label for="description">Description:</label>
    <textarea id="description" name="noteDescription"></textarea>

</form>
<!--------------------------------------------------------------------------------------------------------------------->
<form id="overviewForm" action="/index" method="GET" >
    <input type="hidden" name="fetchData" value="true">
</form>
<!--------------------------------------------------------------------------------------------------------------------->
<button id="createButton" form="createEntryForm" type="submit" formaction="/entries" formmethod="POST">Create</button>
<button id="createAndOverviewButton" form="createEntryForm" type="submit" formaction="/index" formmethod="POST">Create & Overview</button>
<!-- // Todo Gfeller: resolve situation fetchData depending on situation, if necessary. See JavaScript event handler below -->
<button id="overviewButton" form="overviewForm" type="submit"> Overview </button>
<!--------------------------------------------------------------------------------------------------------------------->



<!--
<script>
    // Todo Gfeller: Installing event listeners to control database fetching seems not like a very nice solution. Is it really necessary to do situational fetches or can the fetch for this project take place whenever index is loaded?
    // this script is newly instanciated and executed every time the newEntryForm page is loaded
    // therefore all script variables (such as dbDataHasChanged) will be lost on reload
    let dbDataHasChanged = null;

    const overviewForm = document.getElementById('overviewForm');
    const createEntryForm = document.getElementById('createEntryForm');

    // Event listener for create button
    const createButton = document.getElementById('createButton');
    createButton.addEventListener('click', (event) => {
        event.preventDefault();
        dbDataHasChanged = true;
        createEntryForm.action = "/entries";
        createEntryForm.method = "POST";
        createEntryForm.submit();
    });

    const overviewButton = document.getElementById('overviewButton');
    overviewButton.addEventListener('click', (event) => {
        event.preventDefault();
        if (dbDataHasChanged === true) {
            overviewForm.elements['fetchData'].value = "true"; // Change the value of the 'fetchData' field
            dbDataHasChanged = false;
        }
        overviewForm.submit();    // Manually submit the form
    });

</script>
-->